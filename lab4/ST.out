Token: var  Position: -1
Token: id  Position: 1
Token: ,  Position: -1
Token: id  Position: 2
Token: ,  Position: -1
Token: id  Position: 3
Token: ;  Position: -1
Token: Console  Position: -1
Token: .  Position: -1
Token: ReadInteger  Position: -1
Token: (  Position: -1
Token: id  Position: 1
Token: )  Position: -1
Token: ;  Position: -1
Token: Console  Position: -1
Token: .  Position: -1
Token: ReadInteger  Position: -1
Token: (  Position: -1
Token: id  Position: 2
Token: )  Position: -1
Token: ;  Position: -1
Token: Console  Position: -1
Token: .  Position: -1
Token: ReadInteger  Position: -1
Token: (  Position: -1
Token: id  Position: 3
Token: )  Position: -1
Token: ;  Position: -1
Token: var  Position: -1
Token: id  Position: 4
Token: =  Position: -1
Token: id  Position: 1
Token: ;  Position: -1
Token: var  Position: -1
Token: id  Position: 5
Token: =  Position: -1
Token: constant  Position: 1
Token: ;  Position: -1
Token: var  Position: -1
Token: id  Position: 6
Token: =  Position: -1
Token: constant  Position: 2
Token: ;  Position: -1
Token: var  Position: -1
Token: id  Position: 7
Token: =  Position: -1
Token: constant  Position: 3
Token: if  Position: -1
Token: (  Position: -1
Token: id  Position: 2
Token: <=  Position: -1
Token: id  Position: 4
Token: )  Position: -1
Token: {  Position: -1
Token: id  Position: 4
Token: =  Position: -1
Token: id  Position: 2
Token: ;  Position: -1
Token: }  Position: -1
Token: if  Position: -1
Token: (  Position: -1
Token: id  Position: 3
Token: <  Position: -1
Token: id  Position: 4
Token: )  Position: -1
Token: {  Position: -1
Token: id  Position: 4
Token: =  Position: -1
Token: id  Position: 3
Token: ;  Position: -1
Token: }  Position: -1
Token: Console  Position: -1
Token: .  Position: -1
Token: Write  Position: -1
Token: (  Position: -1
Token: id  Position: 4
Token: )  Position: -1
Token: ;  Position: -1[None, None, None, ('?', 3), ('abc', 1), ('e-:', 2), None, None, None, None][('test', 5), ('test2', 6), ('test3', 7), None, ('min', 4), None, None, ('a', 1), ('b', 2), ('c', 3)]